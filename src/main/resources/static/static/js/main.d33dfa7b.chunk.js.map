{"version":3,"sources":["client.js","Notification.js","StudentDrawerForm.js","App.js","reportWebVitals.js","index.js"],"names":["checkStatus","response","ok","error","Error","statusText","Promise","reject","openNotificationWithIcon","type","message","description","placement","notification","successNotification","errorNotification","Option","Select","StudentDrawerForm","showDrawer","setShowDrawer","fetchStudents","onCLose","useState","submitting","setSubmitting","title","width","onClose","visible","bodyStyle","paddingBottom","footer","style","textAlign","onClick","marginRight","layout","onFinishFailed","errorInfo","alert","JSON","stringify","onFinish","student","console","log","fetch","headers","method","body","then","addStudent","name","catch","err","json","res","status","finally","hideRequiredMark","gutter","span","Item","label","rules","required","placeholder","value","htmlType","tip","Header","Layout","Content","Footer","Sider","SubMenu","Menu","TheAvatar","trim","length","color","backgroundColor","icon","UserOutlined","split","charAt","toUpperCase","name2nd","removeStudent","studentId","callback","deleteStudent","columns","dataIndex","key","render","text","Group","onConfirm","id","okText","cancelText","Button","App","students","setStudents","collapsed","setCollapsed","fetchData","setFetchData","data","useEffect","minHeight","collapsible","onCollapse","className","theme","defaultSelectedKeys","mode","PieChartOutlined","DesktopOutlined","TeamOutlined","FileOutlined","padding","margin","shape","PlusOutlined","size","dataSource","bordered","marginTop","count","pagination","pageSize","scroll","y","rowKey","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d33dfa7b.chunk.js","sourcesContent":["import fetch from \"unfetch\";\r\n\r\nconst checkStatus = (response) => {\r\n    if (response.ok) {\r\n        return response;\r\n    }\r\n    // convert non-2xx HTTP responses into errors:\r\n    const error = new Error(response.statusText);\r\n    error.response = response;\r\n    return Promise.reject(error);\r\n}\r\n\r\nexport const getAllStudents = () =>\r\n    fetch(\"api/v1/students\")\r\n        .then(checkStatus);\r\n\r\nexport const addStudent = student =>\r\n    fetch(\"api/v1/students\",{\r\n        headers:{\r\n            'Content-Type' : 'application/json',\r\n            'Accept': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(student)\r\n    }).then(checkStatus)\r\n\r\nexport const deleteStudent = studentId =>\r\n    fetch(`api/v1/students/${studentId}`, {\r\n        method: \"DELETE\"\r\n    }).then(checkStatus)","import {notification} from \"antd\";\r\n\r\nconst openNotificationWithIcon = (type, message, description, placement) => {\r\n    placement = placement || \"topRight\"\r\n    notification[type]({message, description, placement});\r\n}\r\n\r\nexport const successNotification = (message, description, placement) =>\r\n    openNotificationWithIcon('success', message, description, placement);\r\n\r\nexport const errorNotification = (message, description, placement) =>\r\n    openNotificationWithIcon('error', message, description, placement);\r\n\r\nexport const infoNotification = (message, description, placement) =>\r\n    openNotificationWithIcon('info', message, description, placement);\r\n\r\nexport const warningNotification = (message, description, placement) =>\r\n    openNotificationWithIcon('warning', message, description, placement);","import {Drawer, Input, Col, Select, Form, Row, Button, Spin} from 'antd';\r\nimport {useState} from 'react'\r\nimport {addStudent} from \"./client\";\r\nimport {errorNotification, successNotification} from \"./Notification\";\r\n\r\nconst {Option} = Select;\r\n\r\nfunction StudentDrawerForm({showDrawer, setShowDrawer, fetchStudents}) {\r\n    const onCLose = () => setShowDrawer(false);\r\n    const [submitting, setSubmitting] = useState(false)\r\n\r\n    const onFinish = student => {\r\n        setSubmitting(true)\r\n        console.log(JSON.stringify(student, null, 2))\r\n        addStudent(student)\r\n            .then(() => {\r\n                console.log(\"added\")\r\n                onCLose();\r\n                successNotification(\r\n                    \"Student successfully added\",\r\n                    `${student.name} was added to the system`\r\n                )\r\n                fetchStudents()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                err.response.json().then(res => {\r\n                    console.log(err)\r\n                    errorNotification(\r\n                        \"There was an issue\",\r\n                        `${res.message} [${res.status}] [${res.error}]`,\r\n                        \"bottomLeft\"\r\n                    )\r\n                })\r\n            }).finally(() => {\r\n            setSubmitting(false)\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        alert(JSON.stringify(errorInfo, null, 2));\r\n    };\r\n\r\n    return <Drawer\r\n        title=\"Create new student\"\r\n        width={500}\r\n        onClose={onCLose}\r\n        visible={showDrawer}\r\n        bodyStyle={{paddingBottom: 80}}\r\n        footer={\r\n            <div\r\n                style={{\r\n                    textAlign: 'right',\r\n                }}\r\n            >\r\n                <Button onClick={onCLose} style={{marginRight: 8}}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        }\r\n    >\r\n        <Form layout=\"vertical\"\r\n              onFinishFailed={onFinishFailed}\r\n              onFinish={onFinish}\r\n              hideRequiredMark>\r\n            <Row gutter={16}>\r\n                <Col span={12}>\r\n                    <Form.Item\r\n                        name=\"name\"\r\n                        label=\"Name\"\r\n                        rules={[{required: true, message: 'Please enter student name'}]}\r\n                    >\r\n                        <Input placeholder=\"Please enter student name\"/>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        rules={[{required: true, message: 'Please enter student email'}]}\r\n                    >\r\n                        <Input placeholder=\"Please enter student email\"/>\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n                <Col span={12}>\r\n                    <Form.Item\r\n                        name=\"gender\"\r\n                        label=\"gender\"\r\n                        rules={[{required: true, message: 'Please select a gender'}]}\r\n                    >\r\n                        <Select placeholder=\"Please select a gender\">\r\n                            <Option value=\"MALE\">MALE</Option>\r\n                            <Option value=\"FEMALE\">FEMALE</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n                <Col span={12}>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Form.Item>\r\n                        {submitting && <Spin tip=\"\"></Spin>}\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    </Drawer>\r\n}\r\n\r\nexport default StudentDrawerForm;","import {useState, useEffect} from 'react';\nimport {deleteStudent, getAllStudents} from \"./client\";\nimport {Layout, Menu, Breadcrumb, Table, Empty, Spin, Button, Badge, Tag, Row, Col, Popconfirm, Radio} from \"antd\"\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n  PlusOutlined,\n} from '@ant-design/icons';\nimport './App.css';\nimport StudentDrawerForm from \"./StudentDrawerForm\";\nimport Avatar from \"antd/es/avatar/avatar\";\nimport {errorNotification, successNotification} from \"./Notification\";\n\nconst {Header, Content, Footer, Sider} = Layout;\nconst {SubMenu} = Menu;\n\nconst TheAvatar = ({name}) => {\n  // nama tidak ada\n  let trim = name.trim();\n  if (trim.length === 0) {\n    return <Avatar style={{color: '#f56a00', backgroundColor: '#fde3cf'}} icon={<UserOutlined/>}/>\n  }\n  // nama sebaris ambil huruf depan\n  let split = name.split(\" \");\n  if (split.length === 1) {\n    return <Avatar style={{color: '#f56a00', backgroundColor: '#fde3cf'}} icon={name.charAt(0).toUpperCase()}/>\n  }\n\n  let name2nd = name.split(\" \");\n  return <Avatar style={{color: '#f56a00', backgroundColor: '#fde3cf'}}>\n    {`${name.charAt(0).toUpperCase()}${name2nd[1].charAt(0).toUpperCase()}`}\n  </Avatar>\n}\n\nconst removeStudent = (studentId, callback) => {\n  deleteStudent(12).then(() => {\n    successNotification(\"Student deleted\", `${studentId.name} was deleted`);\n    callback();\n  }).catch(err => {\n    err.response.json().then(res => {\n      console.log(res)\n      errorNotification(\n          \"There was an issue\",\n          `${res.message} [${res.status}] [${res.error}]`,\n          \"bottomLeft\"\n      )\n    })\n  })\n}\n\nconst columns = fetchStudents => [\n  {\n    title: '',\n    dataIndex: 'avatar',\n    key: 'avatar',\n    render: (text, student) => <TheAvatar name={student.name}/>\n\n  },\n  {\n    title: 'Id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n  },\n  {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n  },\n  {\n    title: 'Gender',\n    dataIndex: 'gender',\n    key: 'gender',\n  },\n  {\n    title: 'Action',\n    key: 'Action',\n    render: (text, student) =>\n        <Radio.Group>\n          <Popconfirm\n              // icon=<SyncOutlined spin/>\n              placement='topRight'\n              title={`Are you sure to delete this ${student.name}?`}\n              onConfirm={() => removeStudent(student.id, fetchStudents)}\n              okText=\"Yes\"\n              cancelText=\"No\">\n            <Radio.Button value=\"small\" type=\"dashed\">Delete</Radio.Button>\n          </Popconfirm>\n          <Radio.Button value=\"small\" type=\"dashed\">Edit</Radio.Button>\n        </Radio.Group>\n\n  }\n\n];\n\nfunction App() {\n  const [students, setStudents] = useState([]);\n  const [collapsed, setCollapsed] = useState(true);\n  const [fetchData, setFetchData] = useState(false);\n  const [showDrawer, setShowDrawer] = useState(false);\n\n  const fetchStudents = () =>\n      getAllStudents()\n          .then(res => res.json())\n          .then(data => {\n            console.log(data);\n            setStudents(data);\n            setFetchData(false);\n          })\n      //     .catch(err => {\n      //   console.log(err.response)\n      //    err.response.json().then(res => {\n      //      console.log(res);\n      //      errorNotification(\n      //          \"There was an issue\",\n      //          `${res.message} [${res.status}] [${res.error}]`\n      //      )\n      //    });\n      // }).finally(() => setFetchData(false))\n\n  useEffect(() => {\n    console.log(\"component is mounted\")\n    fetchStudents();\n  }, []);\n\n  const renderStudents = () => {\n    if (fetchData) {\n      return <Spin tip=\"Loading...\">\n      </Spin>\n    }\n    if (students <= 0) {\n      return <>\n        <Button onClick={() => setShowDrawer(!showDrawer)}\n                type=\"primary\" shape=\"round\" icon={<PlusOutlined/>} size={'medium'}>\n          Add New Student\n        </Button>,\n        <Empty/>\n        <StudentDrawerForm\n            showDrawer={showDrawer}\n            setShowDrawer={setShowDrawer}\n            fetchStudents={fetchStudents}\n        />\n      </>\n    }\n    return <>\n      <StudentDrawerForm\n          showDrawer={showDrawer}\n          setShowDrawer={setShowDrawer}\n          fetchStudents={fetchStudents}\n      />\n      <Table dataSource={students}\n             columns={columns(fetchStudents)}\n             bordered\n             title={() => <>\n               <Row gutter={16}>\n                 <Col span={12}>\n                   <Button onClick={() => setShowDrawer(!showDrawer)}\n                           type=\"primary\" shape=\"round\" icon={<PlusOutlined/>} size={'medium'}>\n                     Add New Student\n                   </Button>,\n                 </Col>\n                 <Col span={12}>\n                   <div\n                       style={{\n                         textAlign: 'right',\n                       }}\n                   >\n                     <Tag color=\"gold\" style={{marginTop: \"5px\"}}>Number of Students</Tag>\n                     <Badge count={students.length} className=\"site-badge-count-4\"/>\n                   </div>\n                 </Col>\n               </Row>\n\n             </>}\n             pagination={{pageSize: 50}}\n             scroll={{y: 400}}\n             rowKey={(student) => student.id}\n      />\n    </>\n\n  }\n\n  return <Layout style={{minHeight: '100vh'}}>\n    <Sider collapsible collapsed={collapsed} onCollapse={setCollapsed}>\n      <div className=\"logo\"/>\n      <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n        <Menu.Item key=\"1\" icon={<PieChartOutlined/>}>\n          Option 1\n        </Menu.Item>\n        <Menu.Item key=\"2\" icon={<DesktopOutlined/>}>\n          Option 2\n        </Menu.Item>\n        <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"User\">\n          <Menu.Item key=\"3\">Tom</Menu.Item>\n          <Menu.Item key=\"4\">Bill</Menu.Item>\n          <Menu.Item key=\"5\">Alex</Menu.Item>\n        </SubMenu>\n        <SubMenu key=\"sub2\" icon={<TeamOutlined/>} title=\"Team\">\n          <Menu.Item key=\"6\">Team 1</Menu.Item>\n          <Menu.Item key=\"8\">Team 2</Menu.Item>\n        </SubMenu>\n        <Menu.Item key=\"9\" icon={<FileOutlined/>}>\n          Files\n        </Menu.Item>\n      </Menu>\n    </Sider>\n    <Layout className=\"site-layout\">\n      <Header className=\"site-layout-background\" style={{padding: 0}}/>\n      <Content style={{margin: '0 16px'}}>\n        <Breadcrumb style={{margin: '16px 0'}}>\n          <Breadcrumb.Item>User</Breadcrumb.Item>\n          <Breadcrumb.Item>Bill</Breadcrumb.Item>\n        </Breadcrumb>\n        <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\n          {renderStudents()}\n        </div>\n      </Content>\n      <Footer style={{textAlign: 'center'}}>Learn Fullstack Spring Boot & React</Footer>\n    </Layout>\n  </Layout>\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}